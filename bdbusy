#!/bin/bash

NAME="bdbusy"
CODENAME="bdbusy"
COPYRIGHT="Copyright (C) 2012 Nathan Shearer"
LICENSE="GNU General Public License 2.0"
VERSION="1.3.0.0"

# \brief Ensures dependencies are present
# \param $@ The dependencies to check for
function bdbusy_check_dependencies
{
	for TOOL in "$@"; do
		if ! type "$TOOL" >/dev/null 2>/dev/null; then
			echo "$CODENAME: \"$TOOL\" is required for this application to work correctly." >&2
			exit
		fi
	done
}

# \brief Displays the help and exits the program
function bdbusy_help
{
	#     01234567890123456789012345678901234567890123456789012345678901234567890123456789
	echo "Description:"
	echo "  Periodically read from or write to a block device"
	echo
	echo "Usage:"
	echo "  $CODENAME [options] BLOCK_DEVICE"
	echo
	echo "Options:"
	echo "  --blocks N"
	echo "    Read N blocks per round. Default 256 blocks."
	echo "  --blocksize N"
	echo "    Set the block size to N bytes. Default 4096 bytes."
	echo "  --delay N"
	echo "    Set the delay between reads to N seconds. Default 5 seconds."
	echo "  --email mail@example.com"
	echo "    Set the e-mail address where failure notifications should be sent."
	echo "  -h, --help"
	echo "    Display this help message and exit."
	echo "  -n N"
	echo "    Sets the niceness to N (default 0)."
	echo "  -v"
	echo "    Show each read round. The same as --verbose 1."
	echo "  --verbose #"
	echo "    Use more or less verbose output. Valid values are from 0 to 1 inclusive:"
	echo "      0  Default. No output"
	echo "      1  Show each read round"
	echo "  -w, --write"
	echo "    Write instead of read."
	echo
	echo "Examples:"
	echo "  $CODENAME /dev/disk/by-id/ata-ST8000AS0002-1NA17Z_00000000"
	echo "  $CODENAME -v /dev/disk/by-id/ata-ST8000AS0002-1NA17Z_00000000"
	echo
	echo "Version:"
	echo "  $NAME $VERSION"
	echo "  $COPYRIGHT"
	echo "  Licensed under $LICENSE"
	exit;
}

# \brief The main function of this script
function bdbusy_main
{
	while true; do
		local NOW=$(date --rfc-3339=seconds)
		
		if [ ! -e "$DEVICE" ]; then
			echo "error: \"$DEVICE\" does not exist."
			if [ "$EMAIL" != "" ]; then
				echo "error: \"$DEVICE\" does not exist." | mail -s "$(hostname): bdbusy: error on $NOW" $EMAIL
			fi
			return 1
		fi
		if [ ! -b "$DEVICE" ]; then
			echo "error: \"$DEVICE\" is not a block device."
			if [ "$EMAIL" != "" ]; then
				echo "error: \"$DEVICE\" is not a block device." | mail -s "$(hostname): bdbusy: error on $NOW" $EMAIL
			fi
			return 2
		fi
		
		local DEVICE_BYTES=$(blockdev --getsize64 "$DEVICE")
		local DEVICE_BLOCKS=$(( $DEVICE_BYTES / $BLOCKSIZE ))
		
		if [ $BLOCKS -gt $DEVICE_BLOCKS ]; then
			echo "error: Attempting to read $BLOCKS blocks from a device which only contains $DEVICE_BLOCKS blocks."
			if [ "$EMAIL" != "" ]; then
				echo "error: Attempting to read $BLOCKS blocks from a device which only contains $DEVICE_BLOCKS blocks." | mail -s "$(hostname): bdbusy: error on $NOW" $EMAIL
			fi
			return 3
		fi
		
		local RANDOM64=$(( $RANDOM * $RANDOM * $RANDOM * $RANDOM ))
		local START=$(( $RANDOM64 % ( $DEVICE_BLOCKS - $BLOCKS ) ))
		if [ "$VERBOSE" -ge 1 ]; then
			if $WRITE; then
				echo -n "Writing"
			else
				echo -n "Reading"
			fi
			echo -n " $BLOCKS blocks"
			if $WRITE; then
				echo -n " to"
			else
				echo -n " from"
			fi
			echo -n " ‘$DEVICE’ at block $START..."
		fi
		if $WRITE; then
			ionice -c 3 dd status=none if=/dev/urandom bs="$BLOCKSIZE" count="$BLOCKS" of="$DEVICE" seek=$START
		else
			ionice -c 3 dd status=none if="$DEVICE" bs="$BLOCKSIZE" skip=$START count="$BLOCKS" of=/dev/null
		fi
		if [ "$VERBOSE" -ge 1 ]; then
			echo " done."
		fi
		sleep $DELAY
	done
}

#------------------------------------------------------------------------------
# default configuration
#
BLOCKS="256" #1MB
BLOCKSIZE="4096"
EMAIL=""
NICE=0
DELAY="5"
VERBOSE=0
WRITE=false

#------------------------------------------------------------------------------
# config files
#
if [ -r /etc/$CODENAME.conf ]; then
	. /etc/$CODENAME.conf
fi
if [ -r ~/.$CODENAME.conf ]; then
	. ~/.$CODENAME.conf
fi

#------------------------------------------------------------------------------
# command line arguments
#

if [ $# -eq 0 ]; then
	bdbusy_help
	exit 1
fi

THIS="$0"
while [ $# -ne 0 ]; do
	case "$1" in
		"--blocks")
			BLOCKS="$2"
			shift 2
			;;
		"--blocksize")
			BLOCKSIZE="$2"
			shift 2
			;;
		"--delay")
			DELAY="$2"
			shift 2
			;;
		"--email")
			EMAIL="$2"
			shift 2
			;;
		"-h"|"--help")
			bdbusy_help
			exit
			;;
		"-n")
			NICE="$2"
			shift 2
			;;
		"-v")
			VERBOSE=1
			shift
			;;
		"--verbose")
			VERBOSE="$2"
			shift 2
			;;
		"-w"|"--write")
			WRITE=true
			shift
			;;
		*)
			break;;
	esac
done

if [ $# -eq 0 ]; then
	echo "error: Missing BLOCK_DEVICE argument."
	exit 1
fi
if [ $# -gt 1 ]; then
	bdbusy_help
	exit 1
fi
DEVICE="$1"

#------------------------------------------------------------------------------
# prepare environment

bdbusy_check_dependencies blockdev dd ionice sleep
if [ "$EMAIL" != "" ]; then
	bdbusy_check_dependencies mail
fi
renice $NICE $$ >/dev/null

#------------------------------------------------------------------------------
# begin execution

bdbusy_main
